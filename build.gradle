buildscript {
    ext {
        springBootVersion = '2.3.7.RELEASE'
        lombokVersion = '1.18.10'
        snippetsDir = file('build/generated-snippets')
        asciidocVersion = "2.0.6.RELEASE"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.1.0"
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group 'com.franc'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    asciidoctorExt
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    //implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.3.RELEASE'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:$asciidocVersion"

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$asciidocVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'org.springframework.security:spring-security-test'

    testRuntimeOnly 'com.h2database:h2'

}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}